/*
Given an integer array arr of size N, the task is to divide it into two sets S1 and S2 such that the absolute difference between their sums is minimum and find the minimum difference

Example 1:

Input: N = 4, arr[] = {1, 6, 11, 5} 
Output: 1
Explanation: 
Subset1 = {1, 5, 6}, sum of Subset1 = 12 
Subset2 = {11}, sum of Subset2 = 11   

Example 2:

Input: N = 2, arr[] = {1, 4}
Output: 3
Explanation: 
Subset1 = {1}, sum of Subset1 = 1
Subset2 = {4}, sum of Subset2 = 4


Your Task:  
You don't need to read input or print anything. Complete the function minDifference() which takes N and array arr as input parameters and returns the integer value

Expected Time Complexity: O(N*|sum of array elements|)
Expected Auxiliary Space: O(N*|sum of array elements|)

Constraints:
1 ≤ N*|sum of array elements| ≤ 106
*/

//code in C++

// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{

	public:
	
	

	int utilf(int *arr,int n,int sum,int s1,int index,vector<vector<int>> &dp)
	{
	    if(index>=n)
	    return abs(sum-2*s1)+1;
	    
 
	    
	    int m1,m2;
	    
	    //dp for memoization
	    if(!dp[index+1][s1])//not including current element
	    {
	       dp[index+1][s1]=utilf(arr,n,sum,s1,index+1,dp);
	    }
	   
	    if(!dp[index+1][s1+arr[index]])//including
	    {
	        dp[index+1][s1+arr[index]]=utilf(arr,n,sum,s1+arr[index],index+1,dp);
	    }
	  
	    m1=dp[index+1][s1];
	    m2=dp[index+1][s1+arr[index]];
	        //  cout<<s1<<' '<<index+1<<'\n';
	   return min(m1,m2);
	}
	
	int minDiffernce(int arr[], int n) 
	{ 
	    // Your code goes here
	    int i,j;
	    int s=0;
	    for(i=0;i<n;i++)
	    s+=arr[i];
	    
	    
	    vector<vector<int>> dp(n+1,vector<int>());
	    
	    for(i=0;i<=n;i++)
	    {
	        for(j=0;j<=s;j++)
	        {
	            dp[i].push_back(0);
	        }
	    }
	    
	    int index=0,s1=0;
	    
	    int x=utilf(arr,n,s,s1,index,dp);
	    
	    
	    return x-1;
	} 
};


// { Driver Code Starts.
int main() 
{
   
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.minDiffernce(a, n) << "\n";
	     
    }
    return 0;
}  // } Driver Code Ends
